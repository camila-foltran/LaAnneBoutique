<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAAAGABoAwAANgAAABgYAAAAABgASAcAAJ4DAAAgIAAAAAAYAKgMAADmCgAAKAAAABAA
        AAAgAAAAAQAYAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAC0b0i0b0gAAAC0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAA
        AD4t1i0b0gAAAC0b0i0b0zQi1Dwr1joq1Tcn1TYl1C0b0i0b0gAAAAAAAAAAAAAAAD4t1i0b0gAAAC0b
        0i0b0gAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0gAAAAAAAAAAAD4t1i0b0gAAAC0b0i0b0wAAAAAAAAAA
        AAAAAAAAAAAAAC0b0i0b0gAAAAAAAAAAAD4t1i0b0gAAAC0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC0b0j0t1gAAAAAAAD0t1i0b0gAAAC0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i8e0wAAAAAA
        AD4t1i0b0gAAAC0b0i0b0wAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0iwa0gAAAAAAAD0t1i0b0gAAAC0b
        0iwb0wAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0jEf0wAAAAAAAE9A2i0b0gAAAC0b0i0b0gAAAAAAAAAA
        AAAAAAAAAAAAAC0b0i0b0kAx1wAAAAAAAAAAAAAAAAAAAC0b0i0b0wAAAAAAAAAAAAAAAAAAAC0b0i0b
        0i0b0gAAAAAAAAAAAC0b0i0b0gAAAC0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0gAAAAAAAAAAAAAA
        AC0b0i0b0gAAAC0b0jEf0zQk1Tkp1S0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAkA8AAJAHAACT4wAAk/MAAJP5AACT+QAAk/kAAJP5
        AACT8QAA8+MAAJAHAACQDwAA//8AAP//AAAoAAAAGAAAADAAAAABABgAAAAAAMAGAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvSAAAAAAAA
        AAAAMB7TKxnSKxnSLRvSLRvSLRvSLRvSLRvSLRvSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvS
        KxnSLRvSAAAAAAAAAAAAMB7ULRvSLRvSLRvSOSjVOCjVNSTUMB/TLRvSLRvSLRvSLRvSAAAAAAAAAAAA
        AAAAAAAAAAAALRvSKxnSLRvSAAAAAAAAAAAAMB7TLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvS
        LRvSLRvSAAAAAAAAAAAAAAAAAAAALRvSKxnSLRvSAAAAAAAAAAAAMB7ULRvSLRvSAAAAAAAAAAAAAAAA
        AAAAAAAAAAAALRvSLRvSKxrSLBvSAAAAAAAAAAAAAAAALRvSKxnSLRvSAAAAAAAAAAAAMB7ULRvSLRvS
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvSLRvSAAAAAAAAAAAALRvSLRvSLRvSAAAAAAAA
        AAAAMB7ULRvSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvSAAAAAAAAAAAALRvS
        LRvSLRvSAAAAAAAAAAAALx7ULRvSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvS
        LRvSAAAAAAAALRvSLRvSLRvSAAAAAAAAAAAALx7ULRvSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALRvSLRvSLRvSAAAAAAAALRvSLRvSLRvSAAAAAAAAAAAALx7UKxnSLRvSAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALRvSKxnSLRvSAAAAAAAALRvSLRvSLRvSAAAAAAAAAAAAMB7TKxnSLRvS
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvSAAAAAAAALRvSLRvSLRvSAAAAAAAA
        AAAALx7UKxnSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvSAAAAAAAALRvS
        KxnSLRvSAAAAAAAAAAAALx7TKxnSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvS
        LRvSAAAAAAAALRvSLRvSLRvSAAAAAAAAAAAAMB7TKxnSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAALRvSLRvSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSKxnSLRvSAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAALRvSLRvSLRvSLRvSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvS
        AAAAAAAAAAAAAAAAAAAAAAAAAAAALRvSLRvSLRvSMB7UAAAAAAAAAAAAAAAALRvSMiDTLRvSAAAAAAAA
        AAAAMB7TLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvSLRvSAAAAAAAAAAAAAAAAAAAALRvS
        KxnSLRvSAAAAAAAAAAAALx7TLRvSLRvSLRvSLRvSLRvSLRvSLBrSLRvSLRvSLRvSLRvSAAAAAAAAAAAA
        AAAAAAAAAAAALRvSLRvSLRvSAAAAAAAAAAAAPS3WOSnVOSnVOSnVOSnVOinVPCvWLRvSLRvSLRvSAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AP//
        /wD///8AjgB/AI4AHwCOAA8Ajj+HAI4/wwCOP+MAjj/hAI4/8QCOP/EAjj/xAI4/8QCOP+EAjj/jAP4/
        wwD+P4cAjgAPAI4AHwCOAH8A////AP///wD///8AKAAAACAAAABAAAAAAQAYAAAAAAAADAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAA
        ADAe0zAe0ysZ0isZ0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAAADAe1DAe1C0b0i0b0i0b0i0b0jko1Tgo
        1TUk1DUk1DAf0y0b0i0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b
        0gAAAAAAAAAAAAAAADAe1DAe1C0b0i0b0i0b0i0b0jko1Tgo1TUk1DUk1DAf0y0b0i0b0i0b0i0b0i0b
        0jkp1QAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAAADAe0zAe0y0b0i0b
        0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAA
        AC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAAADAe1DAe1C0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAADkp1S0b0i0b0isa0isa0iwb0gAAAAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAA
        ADAe1DAe1C0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAA
        AAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAAADAe1DAe1C0b0i0b0gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b
        0gAAAAAAAAAAAAAAADAe1DAe1C0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADkp1S0b0i0b0i0b0gAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAC8e1C8e1C0b0i0b
        0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAA
        AC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAC8e1C8e1C0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAADkp1Tkp1S0b0i0b0gAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAA
        AC8e1C8e1C0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkp1Tkp1S0b
        0i0b0gAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAC8e1C8e1CsZ0i0b0gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkp1Tkp1SsZ0i0b0gAAAAAAAAAAAC0b0i0b0i0b0i0b
        0gAAAAAAAAAAAAAAADAe0zAe0ysZ0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAADkp1Tkp1S0b0i0b0gAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAC8e1C8e1CsZ0i0b
        0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkp1Tkp1S0b0i0b0gAAAAAAAAAA
        AC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAC8e1C8e1CsZ0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAADkp1S0b0i0b0i0b0gAAAAAAAAAAAC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAA
        AC8e0y8e0ysZ0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b
        0i0b0gAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAADAe0zAe0ysZ0i0b0gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b
        0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAADkp1S0b0i0b0i0b0i0b0jAe1AAAAAAAAAAAAAAAAAAAAAAAAC0b0jIg0wAAAAAAAAAAAAAAAAAA
        ADAe0zAe0y0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0gAAAAAA
        AAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b0gAAAAAAAAAAAAAAAC8e0y8e0y0b0i0b0i0b0i0b0i0b0i0b
        0i0b0i0b0iwa0i0b0i0b0i0b0i0b0i0b0jkp1QAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0isZ0i0b
        0gAAAAAAAAAAAAAAAC8e0y8e0y0b0i0b0i0b0i0b0i0b0i0b0i0b0i0b0iwa0i0b0i0b0i0b0i0b0i0b
        0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0b0i0b0gAAAAAAAAAAAAAAAAAAAD0t1j0t1jkp1Tkp
        1Tkp1Tkp1Tkp1Top1Twr1jwr1i0b0i0b0i0b0i0b0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////+HgAH/h4AAf4eAAD+HgAAfh4f8D4eH
        /w+Hh/+Hh4f/h4eH/8OHh//Dh4f/w4eH/8OHh//Dh4f/w4eH/8OHh//Dh4f/h/+H/4f/h/8P/4f8D8+A
        AB+HgAA/h4AAf8+AAf//////////////////////
</value>
  </data>
</root>